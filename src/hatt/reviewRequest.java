/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hatt;

import oru.inf.InfDB;
import oru.inf.InfException;
import java.util.ArrayList;
import oru.inf.InfException;
import java.util.HashMap;

/**
 *
 * @author erikr
 */
public class reviewRequest extends javax.swing.JFrame {

    private static InfDB idb;
    private static String rID;
    /**
     * Creates new form reviewRequest
     */
    public reviewRequest() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbReviews = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaDescription = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        btnShowRequest = new javax.swing.JButton();
        lblRequestDenyAccept = new javax.swing.JLabel();
        cbDenyAccept = new javax.swing.JComboBox<>();
        btnCompleteDenyAccept = new javax.swing.JButton();
        lblShowDescription = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cbReviews.setModel(new javax.swing.DefaultComboBoxModel<>(getCBReviews()));

        txtAreaDescription.setColumns(20);
        txtAreaDescription.setRows(5);
        jScrollPane1.setViewportView(txtAreaDescription);

        jLabel1.setText("Välj förfrågan");

        btnShowRequest.setText("Visa");
        btnShowRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowRequestActionPerformed(evt);
            }
        });

        lblRequestDenyAccept.setText("Godkänn/Neka förfrågan");

        cbDenyAccept.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Godkänn", "Neka" }));

        btnCompleteDenyAccept.setText("Fullfölj");
        btnCompleteDenyAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompleteDenyAcceptActionPerformed(evt);
            }
        });

        lblShowDescription.setText("Beskrivning av förfrågan");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                            .addComponent(jLabel1)
                            .addComponent(cbReviews, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                        .addComponent(btnShowRequest))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblRequestDenyAccept)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cbDenyAccept, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnCompleteDenyAccept))))
                            .addComponent(lblShowDescription))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbReviews, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnShowRequest))
                .addGap(3, 3, 3)
                .addComponent(lblShowDescription)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(lblRequestDenyAccept)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbDenyAccept, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCompleteDenyAccept))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnShowRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowRequestActionPerformed
        // TODO add your handling code here:
        String txt = "";
        String cbContent = cbReviews.getSelectedItem().toString();
        String numbers = cbContent.replaceAll("^.*\\s(\\d+)$", "$1");
        rID = numbers;
        try {
            txt = idb.fetchSingle("SELECT description FROM requests WHERE rid = '" + numbers + "'");
        } catch (InfException ex){
            ex.printStackTrace();
        }
        
        txtAreaDescription.setText("");
        txtAreaDescription.append(txt);
    }//GEN-LAST:event_btnShowRequestActionPerformed

    private void btnCompleteDenyAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompleteDenyAcceptActionPerformed
        // TODO add your handling code here:
        String cbContent = cbDenyAccept.getSelectedItem().toString();
        if(cbContent == "Neka"){
            try {
                idb.update("UPDATE requests SET reviewed = 'J' WHERE rid = " + rID);
                idb.update("UPDATE requests SET review_status = 'N' WHERE rid = " + rID);
            } catch (InfException ex){
                ex.printStackTrace();
            }
        } else if (cbContent == "Godkänn"){
            try {
                idb.update("UPDATE requests SET reviewed = 'J' WHERE rid = " + rID);
                idb.update("UPDATE requests SET review_status = 'J' WHERE rid = " + rID);
            } catch (InfException ex){
                ex.printStackTrace();
            }
            
        }
    }//GEN-LAST:event_btnCompleteDenyAcceptActionPerformed

    public static String[] getCBReviews(){
        ArrayList<String> CBAL = new ArrayList<>();
        ArrayList<String> rid = new ArrayList<>();
        
        try {
            rid = idb.fetchColumn("SELECT rid FROM requests");
            for(String s : rid){
                CBAL.add(idb.fetchSingle("SELECT name FROM customer WHERE cid IN (SELECT customer FROM requests WHERE rid = '" + s + "')") + " " + s);
            }
        } catch (InfException ex){
            ex.printStackTrace();
        }
        
        String[] CBReviewsx = new String[CBAL.size()];
        CBAL.toArray(CBReviewsx);
        
        
        return CBReviewsx;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(reviewRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(reviewRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(reviewRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(reviewRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        try {
            idb = new InfDB("hattmakardb", "3306", "hattmakare", "Hattsweatshop");
        }
        catch(InfException ex){
            ex.printStackTrace();
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new reviewRequest().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCompleteDenyAccept;
    private javax.swing.JButton btnShowRequest;
    private javax.swing.JComboBox<String> cbDenyAccept;
    private javax.swing.JComboBox<String> cbReviews;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblRequestDenyAccept;
    private javax.swing.JLabel lblShowDescription;
    private javax.swing.JTextArea txtAreaDescription;
    // End of variables declaration//GEN-END:variables
}
