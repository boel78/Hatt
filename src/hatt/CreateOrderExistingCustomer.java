/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hatt;

import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import oru.inf.InfDB;
import oru.inf.InfException;




/**
 *
 * @author joelnorling
 */
public class CreateOrderExistingCustomer extends javax.swing.JFrame {

private static InfDB idb;

    public CreateOrderExistingCustomer(InfDB idb) {
        this.idb = idb;
        initComponents();
        fillCobCustomers();
        
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tfName = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        tfAddress = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        tfEmail = new javax.swing.JTextField();
        tfPhone = new javax.swing.JTextField();
        lblPhone = new javax.swing.JLabel();
        lblCustomerInfo = new javax.swing.JLabel();
        lblOrderInfo = new javax.swing.JLabel();
        lblDescription = new javax.swing.JLabel();
        tfFabric2 = new javax.swing.JTextField();
        tfFabric4 = new javax.swing.JTextField();
        tfFabric3 = new javax.swing.JTextField();
        tfFabric1 = new javax.swing.JTextField();
        lblMaterial = new javax.swing.JLabel();
        tfAccessories2 = new javax.swing.JTextField();
        tfAccessories0 = new javax.swing.JTextField();
        tfAccessories1 = new javax.swing.JTextField();
        tfAccessories3 = new javax.swing.JTextField();
        tfSize2 = new javax.swing.JTextField();
        tfSize0 = new javax.swing.JTextField();
        lblSize = new javax.swing.JLabel();
        tfAmount2 = new javax.swing.JTextField();
        tfAmount0 = new javax.swing.JTextField();
        tfAmount1 = new javax.swing.JTextField();
        tfAmount3 = new javax.swing.JTextField();
        tfSize1 = new javax.swing.JTextField();
        tfSize3 = new javax.swing.JTextField();
        tfEstimatedTime = new javax.swing.JTextField();
        lblEstimatedTime = new javax.swing.JLabel();
        lblAccessories = new javax.swing.JLabel();
        lblAmount = new javax.swing.JLabel();
        cobCustomers = new javax.swing.JComboBox<>();
        lblCustomers = new javax.swing.JLabel();
        tfDescription = new javax.swing.JTextField();
        btnConfirm = new javax.swing.JButton();
        btnTEST = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tfName.setEditable(false);

        lblName.setText("Namn");

        lblAddress.setText("Adress");

        tfAddress.setEditable(false);

        lblEmail.setText("Epost");

        tfEmail.setEditable(false);

        tfPhone.setEditable(false);

        lblPhone.setText("Telefonnummer");

        lblCustomerInfo.setText("Kundinfo");

        lblOrderInfo.setText("Beställningsinfo");

        lblDescription.setText("Beskrivning");

        lblMaterial.setText("Tyg");

        lblSize.setText("Storlek (cm2)");

        lblEstimatedTime.setText("Estimerad tid");

        lblAccessories.setText("Accessoarer");

        lblAmount.setText("Antal (st)");

        cobCustomers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cobCustomersActionPerformed(evt);
            }
        });

        lblCustomers.setText("Befintlig kund");

        btnConfirm.setText("Bekräfta order");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        btnTEST.setText("TEST");
        btnTEST.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTESTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(lblCustomerInfo))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblPhone)
                            .addComponent(lblEmail)
                            .addComponent(lblAddress)
                            .addComponent(lblName)
                            .addComponent(tfAddress)
                            .addComponent(tfEmail)
                            .addComponent(tfName)
                            .addComponent(tfPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(lblCustomers))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cobCustomers, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(90, 90, 90)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDescription)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblOrderInfo)
                        .addGap(135, 135, 135)
                        .addComponent(btnTEST))
                    .addComponent(tfDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEstimatedTime)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfAccessories0)
                                    .addComponent(tfAccessories1)
                                    .addComponent(tfAccessories2)
                                    .addComponent(tfAccessories3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblAccessories)
                                .addGap(60, 60, 60)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAmount)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(tfAmount2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addComponent(tfAmount1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addComponent(tfAmount0, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addComponent(tfAmount3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblMaterial)
                            .addComponent(tfFabric1)
                            .addComponent(tfFabric2)
                            .addComponent(tfFabric3)
                            .addComponent(tfFabric4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSize)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(tfSize3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addComponent(tfSize2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addComponent(tfSize1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addComponent(tfSize0, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(tfEstimatedTime, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnConfirm)
                        .addGap(30, 30, 30)))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCustomerInfo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblCustomers)
                        .addGap(2, 2, 2)
                        .addComponent(cobCustomers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblAddress)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblPhone)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblEmail)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblOrderInfo)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(btnTEST)))
                        .addGap(22, 22, 22)
                        .addComponent(lblDescription)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblEstimatedTime)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfEstimatedTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblAccessories)
                                    .addComponent(lblAmount))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(tfAmount0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tfAmount1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tfAmount2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(5, 5, 5)
                                        .addComponent(tfAmount3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(tfAccessories0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tfAccessories1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tfAccessories2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(5, 5, 5)
                                        .addComponent(tfAccessories3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(lblSize)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tfSize0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tfSize1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tfSize2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(29, 29, 29))
                                .addComponent(tfSize3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(lblMaterial)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tfFabric1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tfFabric2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tfFabric3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(29, 29, 29))
                                .addComponent(tfFabric4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnConfirm)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private String getCustomerEmail(){
        return cobCustomers.getSelectedItem().toString();     
    }
            
    private void cobCustomersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cobCustomersActionPerformed

        String customerEmail = getCustomerEmail();
        try {
            String nameQuery = "SELECT Name FROM Customer WHERE Email = '" + customerEmail + "'";
            String addressQuery = "SELECT Address FROM Customer WHERE Email = '" + customerEmail + "'";
            String phoneQuery = "SELECT Phone FROM Customer WHERE Email = '" + customerEmail + "'";

            String name = idb.fetchSingle(nameQuery);
            String address = idb.fetchSingle(addressQuery);
            String phone = idb.fetchSingle(phoneQuery);

            tfName.setText(name);
            tfAddress.setText(address);
            tfPhone.setText(phone);
            tfEmail.setText(customerEmail);

        } catch (InfException e) {
            JOptionPane.showMessageDialog(null, "Database error!");
            System.out.println("Internal error message!" + e.getMessage());
        }


    }//GEN-LAST:event_cobCustomersActionPerformed

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        //Fetches the customer info based on the choice in the combobox
        //En metod som hämtar kundID för den valde kund-Eposten för att lägga en order
        //Alla querys ska läggas in i databasen
        String customerEmail = getCustomerEmail();
        try{
        String queryId = "SELECT cid FROM customer WHERE Email = '" + customerEmail + "'";
        String customerID = idb.fetchSingle(queryId);
        
        //Fetches the textfields for ordering a hat
        String description = tfDescription.getText();
        double estimatedTime = Double.parseDouble(tfEstimatedTime.getText());
        
        //Här behövs en metod som kan visa vilken anstäld som lagt ordern 
        //Nu i början kan det alltid vara kopplat till Otto, dvs hårdkoda id 1
        //Här ska även ett increment för orderID ligga       
        //Allt detta ska också in i databasen
        String orderId = idb.getAutoIncrement("xOrder", "oid");
        
        //Creates the order
        //Skapar en order idb ska in i databasklassen
        String query = "INSERT INTO xorder VALUES (" + orderId + ",'" + description + "'," + estimatedTime + ", 1," + customerID + ")";
        idb.insert(query);
        
        
        
        //Fetches the fabrics
        
        ArrayList <String> fabrics = getFabrics();
        ArrayList <String> accessories = getAccessories();
        HashMap <String, String> amounts = getAccessoriesWithAmount();
        HashMap <String, String> sizes = getFabricsWithSize();
       
    
       
       
        
        
        //Temporära databasfrågor
        
        
          String nameQuery = "SELECT name FROM materials";
        ArrayList<String> names;
        names = idb.fetchColumn(nameQuery);
 
        for(String name : names){
                    if(getFabrics().contains(name)){
                       String idQuery = "SELECT mid FROM materials WHERE name = '" + name +" '";
                       String mid = idb.fetchSingle(idQuery);
                       String instertId = "INSERT INTO order_consists_of_materials VALUES (" + orderId + ", " + mid + ", ";
                        
                    }
                }
        }
        catch(InfException ex){
            JOptionPane.showMessageDialog(null, "Database error!");
            System.out.println("Internal error message!" + ex.getMessage());
        }
        
        
        
        
        String fabric1 = tfFabric1.getText();
        String size1 = tfSize0.getText();     
        
        String fabric2 = tfFabric2.getText();
        String size2 = tfSize1.getText();   
        
        String fabric3 = tfFabric3.getText();
        String size3 = tfSize2.getText();    
        
        String fabric4 = tfFabric4.getText();
        String size4 = tfSize3.getText();
        
        //Fetches the accessories
        //Samma validering behövs här
        String accessories1 = tfAccessories2.getText();
        String amount1 = tfAmount0.getText();
        
        String accessories2 = tfAccessories0.getText();
        String amount2 = tfAmount1.getText();
        
        String accessories3 = tfAccessories1.getText();
        String amount3 = tfAmount2.getText();
        
        String accessories4 = tfAccessories3.getText();
        String amount4 = tfAmount3.getText();
        
        //Här behövs en metod som kontrollerar om materialen finns i systemet annars felmeddelande.
        //Såsmåningom ska det leda till en pop-up av att lägga till nytt material
        
        //Även en metod som kontrollerar om matieralet har saldo, annars pop-up med att beställa nytt
        
        
        
        //Inserts the values into a new order
        //lägg en metod här som finns i databasen för att lägga till en ny order
        
        
        
    }//GEN-LAST:event_btnConfirmActionPerformed

    private void btnTESTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTESTActionPerformed
        // TODO add your handling code here:
        HashMap <String,String> lista = getFabricsWithSize();
        for (HashMap.Entry<String, String> entry : lista.entrySet()) {
        String fabric = entry.getKey();
        String size = entry.getValue();
        System.out.println("Fabric: " + fabric + ", Size: " + size);
    }      
    }//GEN-LAST:event_btnTESTActionPerformed
   
    
    private ArrayList<String> getAccessories(){
        ArrayList<String> tfAccessories = new ArrayList<>();
        tfAccessories.add(tfAccessories0.getText());
        tfAccessories.add(tfAccessories1.getText());
        tfAccessories.add(tfAccessories2.getText());
        tfAccessories.add(tfAccessories3.getText());
        
        for(String tf : tfAccessories){
            if (!Validation.hasValueNoError(tf)){
                tfAccessories.remove(tf);
            } 
        } 
        return tfAccessories;
    }       
            
    private ArrayList<String> getFabrics(){
        ArrayList<String> tfFabrics = new ArrayList<>();
        tfFabrics.add(tfFabric1.getText());
        tfFabrics.add(tfFabric2.getText());
        tfFabrics.add(tfFabric3.getText());
        tfFabrics.add(tfFabric4.getText());
        
        for(String tf : tfFabrics){
            if (!Validation.hasValueNoError(tf)){
                tfFabrics.remove(tf);
            } 
        } 
        return tfFabrics;
    }
    
    private HashMap<String, String> getAccessoriesWithAmount() {
        ArrayList<JTextField> tfAccessories = new ArrayList<>();
        tfAccessories.add(tfAccessories0);
        tfAccessories.add(tfAccessories1);
        tfAccessories.add(tfAccessories2);
        tfAccessories.add(tfAccessories3);
        
        ArrayList<JTextField> tfAmounts = new ArrayList<>();
        tfAmounts.add(tfAmount0);
        tfAmounts.add(tfAmount1);
        tfAmounts.add(tfAmount2);
        tfAmounts.add(tfAmount3);
        
        HashMap<String, String> accessoriesWithAmount = new HashMap<>();
        
        for (int i = 0; i < tfAccessories.size(); i++) {

            String fabric = tfAccessories.get(i).getText();      
            String size = tfAmounts.get(i).getText();
            
            if (!fabric.isEmpty() && !size.isEmpty()) {
            accessoriesWithAmount.put(fabric, size);
        }
        }
        return accessoriesWithAmount;
    }

    private HashMap<String, String> getFabricsWithSize() {
        ArrayList<JTextField> tfFabrics = new ArrayList<>();
        tfFabrics.add(tfFabric1);
        tfFabrics.add(tfFabric2);
        tfFabrics.add(tfFabric3);
        tfFabrics.add(tfFabric4);
        
        ArrayList<JTextField> tfSizes = new ArrayList<>();
        tfSizes.add(tfSize0);
        tfSizes.add(tfSize1);
        tfSizes.add(tfSize2);
        tfSizes.add(tfSize3);
        
        HashMap<String, String> fabricsWithSize = new HashMap<>();
        
        for (int i = 0; i < tfFabrics.size(); i++) {

            String fabric = tfFabrics.get(i).getText();      
            String size = tfSizes.get(i).getText();
            
            if (!fabric.isEmpty() && !size.isEmpty()) {
            fabricsWithSize.put(fabric, size);
        }
        }
        return fabricsWithSize;
    }

    private void fillCobCustomers() {
        cobCustomers.addItem("");
        ArrayList<String> emails;
        try {
            String query = "SELECT email FROM customer";
            emails = idb.fetchColumn(query);

            for (String email : emails) {
                cobCustomers.addItem(email);

            }

        } catch (InfException e) {
            System.out.println("Databasfel");
        }
        
    }
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateOrderExistingCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateOrderExistingCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateOrderExistingCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateOrderExistingCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreateOrderExistingCustomer(idb).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfirm;
    private javax.swing.JButton btnTEST;
    private javax.swing.JComboBox<String> cobCustomers;
    private javax.swing.JLabel lblAccessories;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAmount;
    private javax.swing.JLabel lblCustomerInfo;
    private javax.swing.JLabel lblCustomers;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEstimatedTime;
    private javax.swing.JLabel lblMaterial;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblOrderInfo;
    private javax.swing.JLabel lblPhone;
    private javax.swing.JLabel lblSize;
    private javax.swing.JTextField tfAccessories0;
    private javax.swing.JTextField tfAccessories1;
    private javax.swing.JTextField tfAccessories2;
    private javax.swing.JTextField tfAccessories3;
    private javax.swing.JTextField tfAddress;
    private javax.swing.JTextField tfAmount0;
    private javax.swing.JTextField tfAmount1;
    private javax.swing.JTextField tfAmount2;
    private javax.swing.JTextField tfAmount3;
    private javax.swing.JTextField tfDescription;
    private javax.swing.JTextField tfEmail;
    private javax.swing.JTextField tfEstimatedTime;
    private javax.swing.JTextField tfFabric1;
    private javax.swing.JTextField tfFabric2;
    private javax.swing.JTextField tfFabric3;
    private javax.swing.JTextField tfFabric4;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfPhone;
    private javax.swing.JTextField tfSize0;
    private javax.swing.JTextField tfSize1;
    private javax.swing.JTextField tfSize2;
    private javax.swing.JTextField tfSize3;
    // End of variables declaration//GEN-END:variables
}
