/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hatt;

import java.awt.Color;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JOptionPane;

/**
 *
 * @author lukasdenfete
 */
public class Supplier extends javax.swing.JFrame {

    private String sid;
    private String selectedMaterial;

    /**
     * Creates new form Supplier
     */
    public Supplier() {
        initComponents();
        new Database();
        fillSupplier();
        fillMaterials();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHeader = new javax.swing.JLabel();
        cbSuppliers = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblPhone = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        cbMaterial = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnCreate = new javax.swing.JButton();
        btnRemoveSupplier = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblHeader.setText("Leverantörssida");

        cbSuppliers.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ny leverantör" }));
        cbSuppliers.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbSuppliersItemStateChanged(evt);
            }
        });

        jLabel1.setText("Välj leverantör");

        txtName.setColumns(7);

        txtEmail.setColumns(7);

        txtPhone.setColumns(7);

        lblName.setText("Namn:");

        lblEmail.setText("Email:");

        lblPhone.setText("Telefon:");

        txtArea.setColumns(20);
        txtArea.setRows(5);
        jScrollPane1.setViewportView(txtArea);

        jLabel2.setText("Leverantörens material:");

        cbMaterial.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbMaterialItemStateChanged(evt);
            }
        });

        jLabel3.setText("Lägg till material:");

        btnAdd.setText("Lägg till");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnCreate.setText("Skapa");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnRemoveSupplier.setForeground(new java.awt.Color(255, 0, 0));
        btnRemoveSupplier.setText("Ta bort");
        btnRemoveSupplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveSupplierActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addGap(56, 56, 56)
                .addComponent(lblHeader)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(lblName))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbSuppliers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnCreate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnRemoveSupplier))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(lblEmail))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(lblPhone)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(38, 38, 38))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAdd)
                    .addComponent(cbMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblHeader)
                .addGap(22, 296, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnAdd))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(lblPhone)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnCreate)
                                    .addComponent(btnRemoveSupplier)))))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbSuppliers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblEmail)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        String mid = Database.fetchSingle("mid", "materials", "name", selectedMaterial);
        if (btnAdd.getText().equals("Lägg till")) {
            Database.insert("supplier_has_material", "(sid, mid)", "(" + sid + "," + mid + ")");
            fillMaterialBox(sid);
            JOptionPane.showMessageDialog(null, "Material tilldelat.");
            btnAdd.setText("Ta bort");
            btnAdd.setForeground(Color.red);

        } else {
            if (btnAdd.getText().equals("Ta bort")) {
                Database.deleteRow("supplier_has_material", "mid", mid);
                JOptionPane.showMessageDialog(null, "Material har tagits bort från leverantören.");
                btnAdd.setText("Lägg till");
                btnAdd.setForeground(Color.black);
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void cbSuppliersItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbSuppliersItemStateChanged
        // TODO add your handling code here:
        if (cbSuppliers.getSelectedItem().toString().equals("Ny leverantör")) {
            btnCreate.setText("Skapa");

        } else {
            btnCreate.setText("Uppdatera");
            sid = Database.fetchSingle("sid", "supplier", "name", cbSuppliers.getSelectedItem().toString());
            txtName.setText(cbSuppliers.getSelectedItem().toString());
            txtEmail.setText(Database.fetchSingle("email", "supplier", "sid", sid));
            txtPhone.setText(Database.fetchSingle("phone", "supplier", "sid", sid));
            fillMaterialBox(sid);
        }
    }//GEN-LAST:event_cbSuppliersItemStateChanged

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        if (Validation.validateName(txtName.getText())) {
            if (Validation.validateEmailTypo(txtEmail.getText())) {
                if (Validation.validatePhone(txtPhone.getText())) {
                    if (btnCreate.getText().equals("Skapa")) {
                        String newSid = Database.getAutoIncrement("supplier", "sid");
                        Database.insert("supplier", "(sid, name, email, phone)", "(" + newSid + ",'" + txtName.getText() + "','" + txtEmail.getText() + "','" + txtPhone.getText() + "')");
                        JOptionPane.showMessageDialog(null, "Leverantören är nu tillagd");
                    } else {
                        Database.updatePreparedQuery("UPDATE supplier SET name = '" + txtName.getText() + "', email = '" + txtEmail.getText() + "', phone = '" + txtPhone.getText() + "' WHERE sid = " + sid);
                        JOptionPane.showMessageDialog(null, "Leverantören är nu uppdaterad");
                    }
                    txtName.setText("");
                    txtEmail.setText("");
                    txtPhone.setText("");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Fyll i ett giltigt namn");

            }
        }
        fillSupplier();
    }//GEN-LAST:event_btnCreateActionPerformed

    private void cbMaterialItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbMaterialItemStateChanged
        // TODO add your handling code here:
        selectedMaterial = cbMaterial.getSelectedItem().toString();
        String mid = Database.fetchSingle("mid", "materials", "name", selectedMaterial);
        if (!Validation.checkSupplierMaterial(sid, mid)) {
            btnAdd.setText("Lägg till");
            btnAdd.setForeground(Color.black);
        } else {
            btnAdd.setText("Ta bort");
            btnAdd.setForeground(Color.red);
        }
    }//GEN-LAST:event_cbMaterialItemStateChanged

    private void btnRemoveSupplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveSupplierActionPerformed
        int input = JOptionPane.showConfirmDialog(null, "Är du säker på att du vill ta bort leverantören?");
        // 0=yes, 1=no, 2=cancel
        if (input == 0) {

            boolean hasMaterialEmpty = false;
            while (!hasMaterialEmpty) {
                if (Validation.checkExistingCell("supplier_has_material", "sid", sid)) {
                    Database.deleteRow("supplier_has_material", "sid", sid);
                }
                else{
                    hasMaterialEmpty = true;
                }
            }
            
            boolean orderingEmpty = false;
            while (!orderingEmpty) {
                if (Validation.checkExistingCell("ordering_material", "sid", sid)) {
                    Database.deleteRow("ordering_material", "sid", sid);
                }
                else{
                    orderingEmpty = true;
                }
            } 
            if(orderingEmpty && hasMaterialEmpty){
                Database.deleteRow("supplier", "sid", sid);
            }
        }
    }//GEN-LAST:event_btnRemoveSupplierActionPerformed

    private void fillSupplier() {
        int amount = cbSuppliers.getItemCount();
        System.out.println(amount);
        if (cbSuppliers.getItemCount() > 1) {
            for (int i = amount - 1; i >= 1; i--) {
                System.out.println("AMOUBNT:" + amount);
                System.out.println(i);
                cbSuppliers.removeItemAt(i);
            }
        }

        ArrayList<HashMap<String, String>> list = Database.fetchRows(false, "supplier", "", "");
        for (HashMap<String, String> row : list) {
            for (String key : row.keySet()) {
                if (key.equals("name")) {
                    cbSuppliers.addItem(row.get(key));
                }
            }
        }
    }

    private void fillMaterialBox(String sid) {
        txtArea.setText("");
        ArrayList<HashMap<String, String>> list = Database.fetchRows(true, "supplier_has_material", "sid", sid);

        for (HashMap<String, String> row : list) {
            for (String key : row.keySet()) {
                if (key.equals("mid")) {
                    txtArea.append(Database.fetchSingle("name", "materials", "mid", row.get(key)) + "\n");
                }
            }
        }

    }

    private void fillMaterials() {

        ArrayList<HashMap<String, String>> list = Database.fetchRows(false, "materials", "", "");

        for (HashMap<String, String> row : list) {
            for (String key : row.keySet()) {
                if (key.equals("name")) {
                    cbMaterial.addItem(row.get(key));
                }
            }
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Supplier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Supplier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Supplier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Supplier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Supplier().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnRemoveSupplier;
    private javax.swing.JComboBox<String> cbMaterial;
    private javax.swing.JComboBox<String> cbSuppliers;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPhone;
    private javax.swing.JTextArea txtArea;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhone;
    // End of variables declaration//GEN-END:variables
}
